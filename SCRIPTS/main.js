// Main Application
console.log('üéµ Loading main.js...');

import { audioModule } from 'https://jp0024.github.io/piano.github.io/SCRIPTS/audio.js';
import { gameModule } from 'https://jp0024.github.io/piano.github.io/SCRIPTS/game.js';
import { uiModule } from 'https://jp0024.github.io/piano.github.io/SCRIPTS/ui.js';

console.log('‚úÖ All modules imported successfully');

// Application State
const app = {
    isInitialized: false,
    
    async init() {
        console.log('üéÆ Initializing application...');
        try {
            console.log('üéπ Initializing MIDI...');
            await audioModule.initMIDIAccess();
            
            console.log('üñ•Ô∏è Initializing UI...');
            uiModule.init(); // UI-Elemente cachen und EventListener einrichten
            
            console.log('üé≤ Initializing game...');
            gameModule.init(audioModule, uiModule);
            
            console.log('üëã Setting up welcome screen...');
            this.setupWelcomeScreen(); // Dies startet den Prozess, der zum Spiel f√ºhrt
            
            this.isInitialized = true;
            console.log('‚ú® Application initialized successfully');
        } catch (error) {
            console.error('‚ùå Failed to initialize application:', error);
        }
    },

    setupWelcomeScreen() {
        const welcomeOverlay = document.getElementById('welcomeOverlay');
        if (welcomeOverlay) {
            console.log('‚è≥ Welcome screen visible, game will start in 2 seconds...');
            setTimeout(() => {
                if (welcomeOverlay) welcomeOverlay.style.display = 'none';
                console.log('üé¨ Showing main content and starting game...');
                uiModule.showMainContent(); // Jetzt den Hauptinhalt explizit anzeigen
                this.startGame();
            }, 2000);
        } else {
            console.error('‚ùå Welcome overlay element not found! Game may not start correctly.');
            // Fallback: Direkt Hauptinhalt anzeigen und Spiel starten, wenn Welcome-Screen fehlt
            uiModule.showMainContent(); 
            this.startGame();
        }
    },

    startGame() {
        console.log('üéÆ Game starting...');
        gameModule.startGame();
    },

    pauseGame() {
        console.log('‚è∏Ô∏è Game paused');
        audioModule.stopMetronome();
    },

    resumeGame() {
        console.log('‚ñ∂Ô∏è Game resumed');
    },

    endGame() {
        console.log('üèÅ Game ended');
        audioModule.stopMetronome();
        gameModule.endGame();
    },

    // Globale Funktionen f√ºr Buttons
    toggleMetronome() {
        if (audioModule.isMetronomeActive) {
            audioModule.stopMetronome();
        } else {
            audioModule.startMetronome();
        }
    },

    toggleDarkMode() {
        document.body.classList.toggle('dark-mode');
        console.log('üåô Dark mode toggled');
    },

    resetGame() {
        console.log('üîÑ Resetting game via button...');
        gameModule.resetGame(); 
        uiModule.showMainContent(); // Sicherstellen, dass UI sichtbar ist
    }
};

// App global verf√ºgbar machen f√ºr Inline-Event-Handler in HTML
window.app = app;

// Initialisierung starten, nachdem der DOM vollst√§ndig geladen ist
document.addEventListener('DOMContentLoaded', () => {
    console.log('üöÄ DOM fully loaded. Starting application initialization...');
    app.init().catch(error => {
        console.error('‚ùå Initialization error caught by DOMContentLoaded:', error);
    });
}); 
}); 